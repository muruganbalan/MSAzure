{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azdevazuredatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_TGT_PARAMETERIZED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_TGT_OLAP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "dummy"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "dbo",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ONPREM_SQLSERVER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ONPREMSQL_SOURCE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NationalIDNumber",
						"type": "nvarchar"
					},
					{
						"name": "LoginID",
						"type": "nvarchar"
					},
					{
						"name": "OrganizationNode",
						"type": "AdventureWorks2012.sys.hierarchyid"
					},
					{
						"name": "OrganizationLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "JobTitle",
						"type": "nvarchar"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Gender",
						"type": "nchar"
					},
					{
						"name": "HireDate",
						"type": "date"
					},
					{
						"name": "SalariedFlag",
						"type": "bit"
					},
					{
						"name": "VacationHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SickLeaveHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CurrentFlag",
						"type": "bit"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "HumanResources",
					"table": "Employee"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ONPREM_POSTGRES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ONPREM_POSTGRES",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "actor"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_DELTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET_CFG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * from @{pipeline().parameters.ConfigTable}\nIF @@ROWCOUNT = 0 THROW 50000,'No rows in configuration table!',1"
							},
							"dataset": {
								"referenceName": "DS_ASQL_TGT_PARAMETERIZED",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR_EACH_SQL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET_CFG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET_CFG').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET_MAX_SQL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT MAX(CAST(@{item().WatermarkColumn} as date)) as maxd FROM @{item().SRC_tab}"
										},
										"dataset": {
											"referenceName": "DS_ONPREM_SQLSERVER",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "COPY SQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GET_MAX_SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT \n @{item().Cols} FROM @{item().SRC_tab} \n \nWHERE \n\nCAST(@{item().WatermarkColumn} as DATE) > \nCAST('@{item().WatermarkValue}' as DATE)\nAND\nCAST(@{item().WatermarkColumn} as DATE) <=\nCAST('@{activity('GET_MAX_SQL').output.firstRow.MAXD}' as DATE)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ONPREM_SQLSERVER",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL_TGT_PARAMETERIZED",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().DST_tab}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "UPDATE_WATERMARK_SQL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateWatermark]",
										"storedProcedureParameters": {
											"id": {
												"value": "@{item().id}",
												"type": "Int16"
											},
											"NewWatermark": {
												"value": "@{activity('GET_MAX_SQL').output.firstRow.MAXD}",
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_TGT_OLAP",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ConfigTable": {
						"type": "string",
						"defaultValue": "dbo.cfg"
					}
				},
				"folder": {
					"name": "Momentive"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_TGT_PARAMETERIZED')]",
				"[concat(variables('factoryId'), '/datasets/DS_ONPREM_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_DELTA_SQL_AND_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET_CFG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * from @{pipeline().parameters.ConfigTable}\nIF @@ROWCOUNT = 0 THROW 50000,'No rows in configuration table!',1"
							},
							"dataset": {
								"referenceName": "DS_ASQL_TGT_PARAMETERIZED",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dummy"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR_EACH_SQL",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SQL_CFG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SQL_CFG').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET_MAX_SQL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT MAX(CAST(@{item().WatermarkColumn} as date)) as maxd FROM @{item().SRC_tab}"
										},
										"dataset": {
											"referenceName": "DS_ONPREM_SQLSERVER",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "COPY SQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GET_MAX_SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT \n @{item().Cols} FROM @{item().SRC_tab} \n \nWHERE \n\nCAST(@{item().WatermarkColumn} as DATE) > \nCAST('@{item().WatermarkValue}' as DATE)\nAND\nCAST(@{item().WatermarkColumn} as DATE) <=\nCAST('@{activity('GET_MAX_SQL').output.firstRow.MAXD}' as DATE)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ONPREM_SQLSERVER",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL_TGT_PARAMETERIZED",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().DST_tab}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "UPDATE_WATERMARK_SQL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateWatermark]",
										"storedProcedureParameters": {
											"id": {
												"value": "@{item().id}",
												"type": "Int16"
											},
											"NewWatermark": {
												"value": "@{activity('GET_MAX_SQL').output.firstRow.MAXD}",
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_TGT_OLAP",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "SQL_CFG",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET_CFG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET_CFG').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().SRC_name,'SQLS')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FOR_EACH_PG",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PG_CFG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PG_CFG').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GET_MAX_PG",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "PostgreSqlSource",
											"query": "SELECT MAX(CAST(@{item().WatermarkColumn} as date)) as maxd FROM @{item().SRC_tab}"
										},
										"dataset": {
											"referenceName": "DS_ONPREM_POSTGRES",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "COPY_PG_SQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GET_MAX_PG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "PostgreSqlSource",
											"query": {
												"value": "SELECT \n @{item().Cols} FROM @{item().SRC_tab} \n \nWHERE \n\nCAST(@{item().WatermarkColumn} as DATE) > \nCAST('@{item().WatermarkValue}' as DATE)\nAND\nCAST(@{item().WatermarkColumn} as DATE) <=\nCAST('@{activity('GET_MAX_PG').output.firstRow.MAXD}' as DATE)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ONPREM_POSTGRES",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL_TGT_PARAMETERIZED",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().DST_tab}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "UPDATE_WATERMARK_PG_SQL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "COPY_PG_SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateWatermark]",
										"storedProcedureParameters": {
											"id": {
												"value": "@{item().id}",
												"type": "Int16"
											},
											"NewWatermark": {
												"value": "@{activity('GET_MAX_PG').output.firstRow.MAXD}",
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_TGT_OLAP",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PG_CFG",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GET_CFG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET_CFG').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().SRC_name,'PG')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"ConfigTable": {
						"type": "string",
						"defaultValue": "dbo.cfg"
					}
				},
				"folder": {
					"name": "Momentive"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_TGT_PARAMETERIZED')]",
				"[concat(variables('factoryId'), '/datasets/DS_ONPREM_SQLSERVER')]",
				"[concat(variables('factoryId'), '/datasets/DS_ONPREM_POSTGRES')]"
			]
		}
	]
}